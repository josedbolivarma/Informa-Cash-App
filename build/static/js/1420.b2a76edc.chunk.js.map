{"version":3,"file":"static/js/1420.b2a76edc.chunk.js","mappings":"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","sources":["components/Forms/FormEditor/Wrapper.tsx","components/Forms/FormEditor/ModalEditor.tsx","components/Forms/FormEditor/BasicEditor.tsx","components/Forms/FormEditor/FormEditor.tsx","components/Forms/FormEditor/InlineEditeditor.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\n\r\nexport const Wrapper = () => {\r\n\r\n  const [description, setDescription] = useState<any>({\r\n    htmlValue: \"<p>fsegfvfrgdzfgzfdzb</p>\\n\",\r\n    editorState: EditorState.createEmpty()\r\n  });\r\n\r\n  const onEditorStateChange = (editorValue:any) => {\r\n    const editorStateInHtml = draftToHtml(\r\n      convertToRaw(editorValue.getCurrentContent())\r\n    );\r\n\r\n    setDescription({\r\n      htmlValue: editorStateInHtml,\r\n      editorState: editorValue\r\n    });\r\n  };\r\nfunction uploadImageCallBack(file:any) {\r\n  return new Promise(\r\n    (resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('POST', 'https://api.imgur.com/3/image');\r\n      xhr.setRequestHeader('Authorization', 'Client-ID XXXXX');\r\n      const data = new FormData();\r\n      data.append('image', file);\r\n      xhr.send(data);\r\n      xhr.addEventListener('load', () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener('error', () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    }\r\n  );\r\n}\r\n  return (\r\n      <Editor\r\n        toolbarHidden={false}\r\n        editorState={description.editorState}\r\n        onEditorStateChange={onEditorStateChange}\r\n        placeholder=\"Quill is a free, open dfgdfgdghsource WYSIWYG editor built for the modern web. With its modular architecture and expressive API, it is completely customizable to fit any need.\r\n        The icons use here as a replacement to default svg icons are from Line Awesome Icons.\"\r\n        toolbar={{\r\n          inline: { inDropdown: true },\r\n          list: { inDropdown: true },\r\n          textAlign: { inDropdown: true },\r\n          link: { inDropdown: true },\r\n          history: { inDropdown: true },\r\n          image: { uploadCallback: uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n\r\nexport function Modaleditor() {\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const { handleSubmit, control } = useForm({\r\n      mode: \"onChange\",\r\n    });\r\n  \r\n    const handleSubmitOnClick = ({ editor_content }:any) => {\r\n      console.log(\"editor_content ==> \", editor_content);\r\n    };\r\n  \r\n    const values = [true];\r\n  \r\n    return (\r\n      <>\r\n        {values.map((v:any, idx:any) => (\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"mt-3 me-2\"\r\n            key={idx}\r\n            onClick={() => setLgShow(true)}\r\n          >\r\n            View Live Demo\r\n            {typeof v === \"string\" && `below ${v.split(\"-\")[0]}`}\r\n          </Button>\r\n        ))}\r\n        <Modal\r\n          size=\"lg\"\r\n          show={lgShow}\r\n          onHide={() => setLgShow(false)}\r\n          aria-labelledby=\"example-modal-sizes-title-lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Create New Document\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <section>\r\n              <form\r\n                className=\"richText rich\"\r\n                onSubmit={handleSubmit(handleSubmitOnClick)}\r\n              >\r\n                <Controller\r\n                  name=\"editor_content\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  render={(props:any) => (\r\n                    <Editor\r\n                      {...props}\r\n                      onEditorStateChange={(editorState:any) => {\r\n                        if (editorState.blocks) {\r\n                          props.onChange(editorState.blocks[0]);\r\n                        }\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </form>\r\n            </section>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n","import React from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n\r\nexport const BasicEditor = () => {\r\n    const { handleSubmit, control } = useForm({\r\n      mode: \"onChange\",\r\n    });\r\n    const handleSubmitOnClick:any = ({ editor_content }:any) => {\r\n      console.log(\"editor_content ==> \", editor_content);\r\n    };\r\n  \r\n  \r\n    return (\r\n      <section>\r\n        <form className=\"richText br-5\" onSubmit={handleSubmit(handleSubmitOnClick)}>\r\n          <Controller\r\n            name=\"editor_content\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={(props:any) => (\r\n              <Editor\r\n                {...props}\r\n                onEditorStateChange={(editorState:any) => {\r\n                  if (editorState.blocks) {\r\n                    props.onChange(editorState.blocks[0]);\r\n                  }\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n        </form>\r\n      </section>\r\n    );\r\n  };\r\n","import React from 'react';\nimport { Breadcrumb, Card, Col, Row } from 'react-bootstrap';\nimport  {Wrapper } from \"./Wrapper\";\nimport {InlineEditEditor} from \"./InlineEditeditor\"\nimport {Modaleditor} from \"./ModalEditor\"\nimport {BasicEditor} from \"./BasicEditor\"\nconst FormEditor = () => (\n  <div>\n    <div className=\"main-container container-fluid\">\n      {/* <!-- breadcrumb --> */}\n      <div className=\"breadcrumb-header justify-content-between\">\n        <div className=\"left-content\">\n          <span className=\"main-content-title mg-b-0 mg-b-lg-1\">FORM EDITOR</span>\n        </div>\n        <div className=\"justify-content-center mt-2\">\n          <Breadcrumb className=\"breadcrumb\">\n            <Breadcrumb.Item className=\"breadcrumb-item tx-15\" href=\"#\">\n              Forms\n            </Breadcrumb.Item>\n            <Breadcrumb.Item\n              className=\"breadcrumb-item \"\n              active\n              aria-current=\"page\"\n            >\n              Form Editor\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- /breadcrumb --> */}\n\n      {/* <!-- Row --> */}\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"border-bottom-0\">\n              <h3 className=\"card-title\">Summernote Editor</h3>\n            </Card.Header>\n            <Card.Body>\n              <Wrapper />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!--End Row--> */}\n\n      {/* <!-- Row --> */}\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"border-bottom-0\">\n              <h3 className=\"card-title\">Wysiwyag Form Editor</h3>\n            </Card.Header>\n            <Card.Body>\n              <BasicEditor />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!--End Row--> */}\n\n      {/* <!-- Row --> */}\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"border-bottom-0\">\n              <Card.Title className=\"card-title\">Form Editor in Modal</Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <Modaleditor />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- /Row --> */}\n\n      {/* <!-- Row --> */}\n      <Row>\n        <Col md={12}>\n          <Card>\n            <Card.Header className=\"border-bottom-0\">\n              <Card.Title className=\"card-title\">\n                From Inline-Edit Editor\n              </Card.Title>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"wd-xl-100p ht-sm-350\">\n                <div\n                  className=\"ql-scrolling-demo p-4 border\"\n                  id=\"scrolling-container\"\n                >\n                  <InlineEditEditor />\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- /Row --> */}\n    </div>\n  </div>\n);\n\nFormEditor.propTypes = {};\n\nFormEditor.defaultProps = {};\n\nexport default FormEditor;\n","import React from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState,convertFromRaw} from \"draft-js\";\r\n  \r\n  const content = {\r\n    entityMap: {},\r\n    blocks: [\r\n      {\r\n        key: \"637gr\",\r\n        text: \"It is a long established faccvbdt that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem \",\r\n        type: \"unstyled\",\r\n        depth: 0,\r\n        inlineStyleRanges: [],\r\n        entityRanges: [],\r\n        data: {}\r\n      }\r\n    ]\r\n  };\r\n  export class InlineEditEditor extends React.Component{\r\n  \r\n    constructor(props:any) {\r\n      super(props);\r\n      const contentState = convertFromRaw(content);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        contentState,\r\n        editorState\r\n      };\r\n    }\r\n  \r\n    onContentStateChange:any = (contentState: any) => {\r\n      this.setState({\r\n        contentState\r\n      });\r\n    };\r\n  \r\n    onEditorStateChange:any = (editorState: any) => {\r\n      this.setState({\r\n        editorState\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { editorState}:any = this.state;\r\n      return (\r\n      \r\n          <Editor\r\n            editorClassName={\"report-editor\"}\r\n            editorState={editorState}\r\n            onEditorStateChange={this.onEditorStateChange}\r\n            onContentStateChange={this.onContentStateChange}\r\n          />\r\n\r\n      );\r\n    }\r\n  \r\n};\r\n"],"names":["Wrapper","useState","htmlValue","editorState","EditorState","description","setDescription","Editor","toolbarHidden","onEditorStateChange","editorValue","editorStateInHtml","draftToHtml","convertToRaw","getCurrentContent","placeholder","toolbar","inline","inDropdown","list","textAlign","link","history","image","uploadCallback","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","alt","present","mandatory","Modaleditor","lgShow","setLgShow","useForm","mode","handleSubmit","control","map","v","idx","Button","variant","className","onClick","split","Modal","size","show","onHide","closeButton","id","onSubmit","editor_content","console","log","name","defaultValue","render","props","blocks","onChange","BasicEditor","FormEditor","Breadcrumb","href","active","Row","Col","md","Card","defaultProps","content","entityMap","key","text","type","depth","inlineStyleRanges","entityRanges","InlineEditEditor","onContentStateChange","contentState","setState","convertFromRaw","state","this","editorClassName","React"],"sourceRoot":""}