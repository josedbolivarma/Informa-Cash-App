{"version":3,"file":"static/js/381.947e87a4.chunk.js","mappings":"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","sources":["components/AdvancedUI/Modals/data.tsx","components/AdvancedUI/Modals/Modals.tsx"],"sourcesContent":["import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport Draggable from \"react-draggable\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Modal, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\r\n\r\nexport function Varyingmodal() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Open modal for @mdo\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header >\r\n          <Modal.Title>Modal heading\r\n          </Modal.Title>\r\n          <Button variant=\"\" onClick={handleClose}>\r\n            X          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Recipient:</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"@mdo\" autoFocus />\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>Message:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={3} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\">Send message</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport function Varyingmodal1() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Open modal for @fat\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header >\r\n          <Modal.Title>Modal heading\r\n          </Modal.Title>\r\n          <Button variant=\"\" onClick={handleClose}>\r\n            X          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Recipient:</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"@mdo\" autoFocus />\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>Message:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={3} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\">Send message</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport function Varyingmodal2() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Open modal for @getbootstrap\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header >\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n          <Button variant=\"\" onClick={handleClose}>\r\nX          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Recipient:</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\" @getbootstrap\"\r\n                autoFocus\r\n              />\r\n            </Form.Group>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>Message:</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={3} />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\">Send message</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n//PaperComponent\r\nexport function PaperComponent(props:any) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nexport function DraggableModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"modal-effect  d-grid mb-3\"\r\n        href=\"#modaldemo8\"\r\n        variant=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        View Demo\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Message Preview\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Why We Use Electoral College, Not Popular Vote It is a long\r\n            established fact that a reader will be distracted by the readable\r\n            content of a page when looking at its layout. The point of using\r\n            Lorem Ipsum is that it has a more-or-less normal distribution of\r\n            letters, as opposed to using 'Content here, content here', making it\r\n            look like readable English.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"secondary\" className=\"me-1\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} className=\"me-1\" variant=\"success\">\r\n            Save Changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Fullscreen() {\r\n\r\n  let [fullScreen, setFullscreen] = useState(\"true\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const fullscreenmodalClose = () => setShow(false);\r\n\r\n  function handleShow(breakpoint: any) {\r\n      setFullscreen(breakpoint);\r\n      setShow(true);\r\n  }\r\n\r\n  return (\r\n      <>\r\n\r\n          <Button variant=\"warning\" className=\"bg-warning-gradient mt-3 mb-3 mb-md-0 me-1\" onClick={() => handleShow(true)}>\r\n              Full screen\r\n\r\n          </Button>\r\n\r\n          <Modal show={show} fullscreen={fullScreen} onHide={() => setShow(false)}>\r\n              <Modal.Header>\r\n                  <Modal.Title>Modal</Modal.Title>\r\n                  <span className=\"d-flex ms-auto\" onClick={fullscreenmodalClose}><i className='fe fe-x ms-auto' ></i></span>\r\n              </Modal.Header>\r\n              <Modal.Body>Modal body content</Modal.Body>\r\n              <Modal.Footer>\r\n                  <Button variant=\"secondary\" onClick={fullscreenmodalClose}>\r\n                      Close\r\n                  </Button>\r\n                  <Button variant=\"primary\" onClick={fullscreenmodalClose}>\r\n                      Save Changes\r\n                  </Button>\r\n              </Modal.Footer>\r\n          </Modal>\r\n      </>\r\n  )\r\n};\r\nexport function Tooltipa() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn ripple btn-primary\"\r\n        variant=\"\"\r\n        onClick={handleShow}\r\n      >\r\n        View demo\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title>popover model</Modal.Title>\r\n          <Button variant=\"\" className=\"btn btn-close\" onClick={handleClose}>\r\n            x\r\n          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5>Popover in a modal</h5>{\" \"}\r\n          <p>\r\n            This{\" \"}\r\n            <OverlayTrigger\r\n              placement=\"right\"\r\n             \r\n              overlay={\r\n                <Tooltip id=\"button-tooltip\" >\r\n                  Simple tooltip\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <Button variant=\"\" className=\"btn btn-secondary me-2\">\r\n               \r\n                button\r\n              </Button>\r\n            </OverlayTrigger>\r\n            \r\n            triggers a popover on click.\r\n          </p>\r\n          <hr /> <h5>Tooltips in a modal</h5>{\" \"}\r\n          <p>\r\n            {\" \"}\r\n            <Button\r\n              variant=\"\"\r\n              className=\"btn btn-secondary me-1\"\r\n              data-bs-placement=\"top\"\r\n              data-bs-toggle=\"tooltip\"\r\n              title=\"\"\r\n              type=\"button\"\r\n              data-bs-original-title=\"Tooltip on top\"\r\n            >\r\n              This link\r\n            </Button>\r\n            and{\" \"}\r\n            <Button\r\n              variant=\"\"\r\n              className=\"btn btn-secondary\"\r\n              data-bs-placement=\"top\"\r\n              data-bs-toggle=\"tooltip\"\r\n              title=\"\"\r\n              type=\"button\"\r\n              data-bs-original-title=\"Tooltip on top\"\r\n            >\r\n              that link\r\n            </Button>{\" \"}\r\n            have tooltips on hover.\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n//ExtralargeModal\r\nexport function ExtralargeModal() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <>\r\n      <Button className=\"me-2\" variant=\"primary\" onClick={handleShow}>\r\n        View Demo\r\n      </Button>\r\n\r\n      <Modal\r\n        size=\"lg\"\r\n        show={show}\r\n        aria-labelledby=\"example-modal-sizes-title-lg\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Large Modal</Modal.Title>\r\n          <Button\r\n            onClick={() => setShow(false)}\r\n            className=\"btn-close\"\r\n            variant=\"\"\r\n          >\r\n            x\r\n          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>Modal body text goes here.</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport function MyVerticallyCenteredModal(props:any) {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Modal heading</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Centered Modal</h4>\r\n        <p>\r\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n          consectetur ac, vestibulum at eros.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          className=\"modal-effect  d-grid mb-3\"\r\n\r\n          onClick={props.onHide}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\nexport function VerticallyCenteredModal() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn ripple btn-primary\"\r\n        variant=\"primary\"\r\n        onClick={() => setModalShow(true)}\r\n      >\r\n        View Demo\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport function MydModalWithGrid(props:any) {\r\n  \r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n      <Modal.Header>\r\n        <Modal.Title>Using Grid in Modal</Modal.Title>\r\n        <Button variant=\"\" className=\"btn btn-close text-dark\" onClick={props.onHide}>\r\n            x\r\n          </Button>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"show-grid\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} md={8}>\r\n              .col-xs-12 .col-md-8\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n            <Col xs={6} md={4}>\r\n              .col-xs-6 .col-md-4\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          className=\"modal-effect  d-grid mb-3\"\r\n          href=\"#modaldemo8\"\r\n          onClick={props.onHide}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n//Gridmodal\r\nexport function Gridmodala() {\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn ripple btn-primary\"\r\n        variant=\"primary\"\r\n        onClick={() => setModalShow(true)}\r\n      >\r\n        View Demo\r\n      </Button>\r\n\r\n      <MydModalWithGrid\r\n        variant=\"primary\"\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}","import React, { useState } from 'react';\nimport { Breadcrumb, Button, Card, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { DraggableModal,  ExtralargeModal, Fullscreen, Gridmodala,  Tooltipa, Varyingmodal, Varyingmodal1, Varyingmodal2, VerticallyCenteredModal } from './data';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@mui/material\";\n\nimport Select from \"react-select\";\n\nconst Modals = () => {\n  const [basic, setbasic] = useState(false);\n  const [smShow, setSmShow] = useState(false);\n  const [lgShow, setLgShow] = useState(false);\n  const [gridshow, setGridshow] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [Error, setError] = useState(false);\n  const [select, setSelect] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<any>(null);\n  const [Scroll, setScroll] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setscroll] = React.useState(\"paper\");\n\n  const handleClickOpen = (scrollType:any) => () => {\n    setOpen(true);\n    setscroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef:any = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n  let viewDemoShow = (modal:any) => {\n    switch (modal) {\n      case \"Basic\":\n        setbasic(true)\n        break;\n        case \"smShow\":\n          setSmShow(true)\n          break;\n          case \"lgShow\":\n            setLgShow(true)\n            break;\n            case \"gridshow\":\n              setGridshow(true)\n            break;\n            case \"success\":\n              setSuccess(true)\n            break;\n            case \"Error\":\n              setError(true)\n            break;\n            case \"select\":\n              setSelect(true)\n            break;\n            case \"Scroll\":\n              setScroll(true)\n            break;\n            // case \"modalShow\":\n            //   setmodalShow(true)\n            // break;\n    }\n  }\n\n  let viewDemoClose = (modal:any) => {\n    switch (modal) {\n      case \"Basic\":\n        setbasic(false)\n        break;\n        case \"smShow\":\n          setSmShow(false)\n          break;\n          case \"lgShow\":\n            setLgShow(false)\n            break;\n            case \"gridshow\":\n              setGridshow(false)\n            break;\n            case \"success\":\n              setSuccess(false)\n            break;\n            case \"Error\":\n              setError(false)\n            break;\n            case \"select\":\n              setSelect(false)\n            break;\n            case \"Scroll\":\n              setScroll(false)\n            break;\n            // case \"modalShow\":\n            //   setmodalShow(false)\n            // break;\n    }\n  }\n  const options = [\n    { value: \"Firefox\", label: \"Firefox\" },\n    { value: \"Chrome\", label: \"Chrome\" },\n    { value: \"Safari\", label: \"Safari\" },\n    { value: \"Opera\", label: \"Opera \" },\n    { value: \"Internet Explorer\", label: \"Internet Explorer\" },\n  ];\n\n  return (\n    <div>\n      {/* <!-- breadcrumb --> */}\n      <div className=\"breadcrumb-header justify-content-between\">\n        <div className=\"left-content\">\n          <span className=\"main-content-title mg-b-0 mg-b-lg-1\">MODALS</span>\n        </div>\n        <div className=\"justify-content-center mt-2\">\n          <Breadcrumb className=\"breadcrumb\">\n            <Breadcrumb.Item className=\"breadcrumb-item tx-15\" href=\"#\">\n              Advanced UI\n            </Breadcrumb.Item>\n            <Breadcrumb.Item\n              className=\"breadcrumb-item \"\n              active\n              aria-current=\"page\"\n            >\n              Modals\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- /breadcrumb --> */}\n\n      {/* <!-- row --> */}\n      <Row>\n        <Col md={12} lg={12}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title mb-1\">Basic Example of Modal View</h6>\n                <p className=\"text-muted card-sub-title\">\n                  Below is the static example of the basic modal.\n                </p>\n              </div>\n              <div className=\"pd-20\">\n                <div className=\"modal d-block pos-static basic-modal\">\n                  <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content modal-content-demo\">\n                      <Modal.Header>\n                        <h6 className=\"modal-title\">Modal Header</h6>\n                        <Button\n                          variant=\"\"\n                          aria-label=\"Close\"\n                          className=\"btn-close\"\n                          data-bs-dismiss=\"modal\"\n                          type=\"button\"\n                        >\n                          <span aria-hidden=\"true\">&times;</span>\n                        </Button>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <h6>Modal Body</h6>\n                        <p>\n                          Nemo enim ipsam voluptatem quia voluptas sit aspernatur\n                          aut odit aut fugit, sed quia consequuntur magni dolores\n                          eos qui ratione voluptatem sequi nesciunt.\n                        </p>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button\n                          variant=\"\"\n                          className=\"btn ripple btn-primary\"\n                          type=\"button\"\n                        >\n                          Save changes\n                        </Button>\n                        <Button\n                          variant=\"\"\n                          className=\"btn ripple btn-secondary\"\n                          type=\"button\"\n                        >\n                          Close\n                        </Button>\n                      </Modal.Footer>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- /row --> */}\n\n      {/* <!-- row --> */}\n      <Row>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Basic Modal</h6>\n              </div>\n                <Button\n                  className=\"btn ripple btn-primary\"\n                  variant=\"\"\n                  onClick={() => viewDemoShow(\"Basic\")}\n                >\n                  View demo\n                </Button>\n                <Modal show={basic} >\n                  <Modal.Header>\n                    <Modal.Title>Basic Modal</Modal.Title>\n                    <Button variant=\"\" className=\"btn btn-close\" onClick={() => { viewDemoClose(\"Basic\") }}>\n                      x\n                    </Button>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <h6>Modal Body</h6>\n                    <p>\n                      Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut\n                      fugit, sed quia consequuntur magni dolores eos qui ratione\n                      voluptatem sequi nesciunt.\n                    </p>\n                  </Modal.Body>\n                  <Modal.Footer>\n                    <Button variant=\"primary\" onClick={() => { viewDemoClose(\"Basic\") }}>\n                      Save Changes\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => { viewDemoClose(\"Basic\") }}>\n                      Close\n                    </Button>\n                  </Modal.Footer>\n                </Modal>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Small Modal</h6>\n              </div>\n      <Button\n           onClick={() => viewDemoShow(\"smShow\")}\n        className=\"btn ripple btn-secondary\"\n        variant=\"\"\n      >\n        View Demo\n      </Button>\n      <Modal\n        size=\"sm\"\n        show={smShow}\n        \n        aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n        <Modal.Header>\n          <Modal.Title>Small Modal</Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"btn btn-close ms-auto\"\n            onClick={() => { viewDemoClose(\"smShow\") }}\n          >\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut\n            fugit, sed quia consequuntur magni dolores eos qui ratione\n            voluptatem sequi nesciunt.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => { viewDemoClose(\"smShow\") }}>\n            Save Changes\n          </Button>\n          <Button variant=\"secondary\" onClick={() => { viewDemoClose(\"smShow\") }}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Large Modal</h6>\n              </div>\n      <Button\n          onClick={() => viewDemoShow(\"lgShow\")}\n        className=\"btn ripple btn-info\"\n        variant=\"\"\n      >\n        View Demo\n      </Button>\n      <Modal\n        size=\"lg\"\n        show={lgShow}\n        \n        aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n        <Modal.Header>\n          <Modal.Title>Large Modal</Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"btn btn-close ms-auto\"\n           onClick={() => { viewDemoClose(\"lgShow\") }}\n          >\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut\n            fugit, sed quia consequuntur magni dolores eos qui ratione\n            voluptatem sequi nesciunt.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\"onClick={() => { viewDemoClose(\"lgShow\") }}>\n            Save Changes\n          </Button>\n          <Button variant=\"secondary\"onClick={() => { viewDemoClose(\"lgShow\") }}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Grid Modal</h6>\n              </div>\n      <Button\n        onClick={() => viewDemoShow(\"gridshow\")}\n        variant=\"\"\n        className=\"btn ripple btn-warning\"\n      >\n        View Demo\n      </Button>\n      <Modal\n        size=\"lg\"\n        show={gridshow}\n        aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n        <Modal.Header>\n          <Modal.Title>Grid Modal</Modal.Title>\n          <Button variant=\"\" className=\"btn btn-close text-dark\"onClick={() => { viewDemoClose(\"gridshow\") }}>\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            {\" \"}\n            <div className=\"col-md-6\">\n              {\" \"}\n              <p>\n                Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n                accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n                quae ab illo inventore veritatis et quasi architecto beatae\n                vitae dicta sunt explicabo.\n              </p>\n            </div>{\" \"}\n            <div className=\"col-md-6\">\n              {\" \"}\n              <p>\n                But I must explain to you how all this mistaken idea of\n                denouncing pleasure and praising pain was born and I will give\n                you a complete account of the who loves toil and pain can\n                procureor sit aspernatur system.\n              </p>\n            </div>{\" \"}\n          </div>{\" \"}\n          <div className=\"row\">\n            {\" \"}\n            <div className=\"col-md-6\">\n              {\" \"}\n              <p>\n                expound the actual teachings of the great explorer of the truth,\n                the master-builder of human happiness. No one rejects, dislikes,\n                or avoids pleasure itself, because it is pleasure desires to\n                obtain pain.\n              </p>\n            </div>{\" \"}\n            <div className=\"col-md-6\">\n              {\" \"}\n              <p>\n                Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet,\n                consectetur, adipisci velit, sed quia non numquam eius modi\n                tempora incidunt ut labore et dolore magnam aliquam quaerat aut\n                odit voluptatem.\n              </p>\n            </div>{\" \"}\n          </div>{\" \"}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\"onClick={() => { viewDemoClose(\"gridshow\") }}>\n            Save Changes\n          </Button>\n          <Button variant=\"secondary\"onClick={() => { viewDemoClose(\"gridshow\") }}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Modal Success Alert Messages</h6>\n              </div>\n      <Button\n        className=\"btn ripple btn-success\"\n        variant=\"\"\n        onClick={() => viewDemoShow(\"success\")}\n      >\n        View demo\n      </Button>\n      <Modal show={success} >\n        <Modal.Header>\n          <Button variant=\"\" className=\"btn btn-close\" onClick={() => { viewDemoClose(\"success\") }}>\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"tx-center \">\n            <i className=\"icon ion-ios-checkmark-circle-outline tx-100 tx-success lh-1 mg-t-20 d-inline-block\"></i>{\" \"}\n            <h4 className=\"tx-success tx-semibold mg-b-20\">Congratulations!</h4>{\" \"}\n            <p className=\"mg-b-20 mg-x-20\">\n              There are many variations of passages of Lorem Ipsum available,\n              but the majority have suffered alteration.\n            </p>\n            <Button\n              variant=\"\"\n              aria-label=\"Close\"\n              className=\"btn ripple btn-success pd-x-25\"\n              type=\"button\"\n            >\n              Continue\n            </Button>{\" \"}\n          </div>\n        </Modal.Body>\n      </Modal>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Modal Danger Alert Messages</h6>\n              </div>\n              <>\n      <Button className=\"btn ripple btn-danger\" variant=\"\"  onClick={() => viewDemoShow(\"Error\")}>\n        View demo\n      </Button>\n      <Modal show={Error} >\n        <Modal.Header>\n          <Button variant=\"\" className=\"btn btn-close\" onClick={() => { viewDemoClose(\"Error\") }}>\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"tx-center\">\n            {\" \"}\n            <i className=\"icon icon ion-ios-close-circle-outline tx-100 tx-danger lh-1 mg-t-20 d-inline-block\"></i>{\" \"}\n            <h4 className=\"tx-danger mg-b-20\">\n              Error: Cannot process your entry!\n            </h4>{\" \"}\n            <p className=\"mg-b-20 mg-x-20\">\n              There are many variations of passages of Lorem Ipsum available,\n              but the majority have suffered alteration.\n            </p>\n            <Button\n              variant=\"\"\n              aria-label=\"Close\"\n              className=\"btn ripple btn-danger pd-x-25\"\n              type=\"button\"\n            >\n              Continue\n            </Button>{\" \"}\n          </div>\n        </Modal.Body>\n      </Modal>\n    </> \n            </Card.Body>\n          </Card>\n        </Col>\n        <Col sm={6} md={6} lg={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Select2 Inside Modals</h6>\n              </div>\n              <>\n      <Button className=\"btn ripple btn-teal\" variant=\"\" onClick={() => viewDemoShow(\"select\")}>\n        View demo\n      </Button>\n\n      <Modal show={select} >\n        <Modal.Header>\n          <Modal.Title>Select2 Modal</Modal.Title>\n          <Button variant=\"\" className=\"btn btn-close\" onClick={() => { viewDemoClose(\"select\") }}>\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <h6>Modal Body</h6>\n          <div className=\" SlectBox\">\n            <Select\n              defaultValue={selectedOption}\n              onChange={setSelectedOption}\n              options={options}\n              placeholder=\"Chrome\"\n              classNamePrefix=\"selectform\"\n            />\n          </div>\n          <p>\n            Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut\n            fugit, sed quia consequuntur magni dolores eos qui ratione\n            voluptatem sequi nesciunt.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => { viewDemoClose(\"select\") }}>\n            Save Changes\n          </Button>\n          <Button variant=\"secondary\" onClick={() => { viewDemoClose(\"select\") }}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col sm={6} md={6} lg={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Scrolling Modal</h6>\n              </div>\n              <>\n      <Button\n        className=\"btn ripple btn-primary\"\n        variant=\"\"\n        \n        onClick={() => viewDemoShow(\"Scroll\")}\n      >\n        View demo\n      </Button>\n\n      <Modal show={Scroll} >\n        <Modal.Header>\n          <Modal.Title>Scrolling With Content Modal</Modal.Title>\n          <Button variant=\"\" className=\"btn btn-close\" onClick={() => { viewDemoClose(\"Scroll\") }}>\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut\n            fugit, sed quia consequuntur magni dolores eos qui ratione\n            voluptatem sequi nesciunt.\n          </p>\n          <p>\n            But I must explain to you how all this mistaken idea of denouncing\n            pleasure and praising pain was born and I will give you a complete\n            account of the system, and expound the actual teachings of the great\n            explorer of the truth, the master-builder of human happiness. No one\n            rejects, dislikes, or avoids pleasure itself, because it is\n            pleasure, but because those who do not know how to pursue pleasure\n            rationally encounter consequences that are extremely painful.{\" \"}\n          </p>\n          <p>\n            At vero eos et accusamus et iusto odio dignissimos ducimus qui\n            blanditiis praesentium voluptatum deleniti atque corrupti quos\n            dolores et quas molestias excepturi sint occaecati cupiditate non\n            provident, similique sunt in culpa qui officia deserunt mollitia\n            animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis\n            est et expedita distinctio.\n          </p>\n          <p>\n            On the other hand, we denounce with righteous indignation and\n            dislike men who are so beguiled and demoralized by the charms of\n            pleasure of the moment, so blinded by desire, that they cannot\n            foresee the pain and trouble that are bound to ensue; and equal\n            blame belongs to those who fail in their duty through weakness of\n            will, which is the same as saying through shrinking from toil and\n            pain.\n          </p>\n          <p>\n            These cases are perfectly simple and easy to distinguish. In a free\n            hour, when our power of choice is untrammelled and when nothing\n            prevents our being able to do what we like best, every pleasure is\n            to be welcomed and every pain avoided. But in certain circumstances\n            and owing to the claims of duty or the obligations of business it\n            will frequently occur that pleasures have to be repudiated and\n            annoyances accepted. The wise man therefore always holds in these\n            matters to this principle of selection: he rejects pleasures to\n            secure other greater pleasures, or else he endures pains to avoid\n            worse pains.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\"  onClick={() => { viewDemoClose(\"Scroll\") }}>\n            Save Changes\n          </Button>\n          <Button variant=\"secondary\"  onClick={() => { viewDemoClose(\"Scroll\") }}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col sm={6} md={12} lg={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Scrolling with Content</h6>\n              </div>\n              <>\n      <Button\n        className=\"btn ripple btn-secondary\"\n        variant=\"\"\n        onClick={handleClickOpen(\"paper\")}\n      >\n        View Demo\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        \n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">Modal title</DialogTitle>\n        <DialogContent dividers={scroll === \"paper\"}>\n          <DialogContentText ref={descriptionElementRef} tabIndex={-1}>\n            {[...new Array(50)]\n              .map(\n                () => `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum..\n                But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure? \n                On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.`\n              )\n              .join(\"\\n\")}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"secondary\" className=\"me-1\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" className=\"me-1\" onClick={handleClose}>\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- /row --> */}\n\n      {/* <!-- row --> */}\n      <Row>\n        <Col md={12} lg={12}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title mb-1\">Varying modal content</h6>\n                <p className=\"text-muted card-sub-title\">\n                  Below are different kind of effects to choose from.\n                </p>\n              </div>\n              <Row className=\"row-sm\">\n                <div className=\"btn-list\">\n                  <Varyingmodal />\n\n                  <Varyingmodal1 />\n\n                  <Varyingmodal2 />\n\n                </div>\n                <Modal\n                  className=\"fade\"\n                  id=\"exampleModal\"\n                  tabIndex=\"-1\"\n                  aria-labelledby=\"exampleModalLabel\"\n                  aria-hidden=\"true\"\n                >\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <Modal.Header>\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                          New message\n                        </h5>\n                        <Button\n                          variant=\"\"\n                          aria-label=\"Close\"\n                          className=\"btn-close\"\n                          data-bs-dismiss=\"modal\"\n                          type=\"button\"\n                        >\n                          <span aria-hidden=\"true\">&times;</span>\n                        </Button>\n                      </Modal.Header>\n                      <Modal.Body>\n                        <Form>\n                          <div className=\"mb-3\">\n                            <Form.Label\n                              htmlFor=\"recipient-name\"\n                              className=\"col-form-label\"\n                            >\n                              Recipient:\n                            </Form.Label>\n                            <Form.Control\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"recipient-name\"\n                            />\n                          </div>\n                          <div className=\"mb-3\">\n                            <Form.Label\n                              htmlFor=\"message-text\"\n                              className=\"col-form-label\"\n                            >\n                              Message:\n                            </Form.Label>\n                            <textarea\n                              className=\"form-control\"\n                              id=\"message-text\"\n                            ></textarea>\n                          </div>\n                        </Form>\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button\n                          variant=\"\"\n                          type=\"button\"\n                          className=\"btn btn-secondary\"\n                          data-bs-dismiss=\"modal\"\n                        >\n                          Close\n                        </Button>\n                        <Button\n                          variant=\"\"\n                          type=\"button\"\n                          className=\"btn btn-primary\"\n                        >\n                          Send message\n                        </Button>\n                      </Modal.Footer>\n                    </div>\n                  </div>\n                </Modal>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- row closed --> */}\n      <Row>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Toggle between modals</h6>\n              </div>\n              <Row className=\"row-sm\">\n                <DraggableModal />\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">full-screen</h6>\n              </div>\n              <Fullscreen />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">popover model</h6>\n              </div>\n              <Tooltipa />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Grid Modal</h6>\n              </div>\n              <Gridmodala />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Vertically centered</h6>\n              </div>\n              <VerticallyCenteredModal />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col lg={4} md={6} sm={4}>\n          <Card className=\"custom-card\">\n            <Card.Body>\n              <div>\n                <h6 className=\"card-title\">Extra-large</h6>\n              </div>\n              <ExtralargeModal />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- row closed --> */}\n    </div>\n  );\n}\n\nModals.propTypes = {};\n\nModals.defaultProps = {};\n\nexport default Modals;\n"],"names":["Varyingmodal","useState","show","setShow","handleClose","Button","variant","onClick","Modal","onHide","Form","className","controlId","type","placeholder","autoFocus","as","rows","Varyingmodal1","Varyingmodal2","PaperComponent","props","handle","cancel","Paper","DraggableModal","React","open","setOpen","href","Dialog","onClose","DialogTitle","style","cursor","id","DialogContent","DialogContentText","DialogActions","Fullscreen","fullScreen","setFullscreen","fullscreenmodalClose","fullscreen","Tooltipa","OverlayTrigger","placement","overlay","Tooltip","title","ExtralargeModal","size","MyVerticallyCenteredModal","centered","VerticallyCenteredModal","modalShow","setModalShow","MydModalWithGrid","Container","Row","Col","xs","md","Gridmodala","Modals","basic","setbasic","smShow","setSmShow","lgShow","setLgShow","gridshow","setGridshow","success","setSuccess","Error","setError","select","setSelect","selectedOption","setSelectedOption","Scroll","setScroll","scroll","setscroll","descriptionElementRef","descriptionElement","current","focus","scrollType","viewDemoShow","modal","viewDemoClose","Breadcrumb","active","lg","Card","role","sm","defaultValue","onChange","options","value","label","classNamePrefix","dividers","ref","tabIndex","Array","map","join","htmlFor","defaultProps"],"sourceRoot":""}