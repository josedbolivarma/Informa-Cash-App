{"version":3,"file":"static/js/5316.484b97ab.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["activeElement","doc","ownerDocument","active","nodeName","e","body","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","document","getManager","modal","useRef","dialog","backdrop","Object","assign","current","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","useState","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useEffect","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","addClass","element","classList","hasClass","baseVal","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","value","marginProp","qsa","el","adjustAndStore","restore","getSharedManager","options","propTypes","PropTypes","type","classNames","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","receiver","base","desc","getOwnPropertyDescriptor","arguments","apply"],"sourceRoot":""}