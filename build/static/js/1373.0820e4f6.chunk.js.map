{"version":3,"file":"static/js/1373.0820e4f6.chunk.js","mappings":"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","sources":["components/Elements/Thumbnails/Thumbnails.tsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import React from 'react';\nimport {\n  Breadcrumb,\n  Row,\n  Col,\n  Card,\n  Form,\n  Collapse,\n \n} from \"react-bootstrap\";\n\nconst Thumbnails = () => {\n  const [Thumbnailplacement, setThumbnailplacement] = React.useState(false);\n  const [Aligning, setAligning] = React.useState(false);\n\n  return(\n  <div>\n      {/* <!-- breadcrumb --> */}\n      <div className=\"breadcrumb-header justify-content-between\">\n        <div className=\"left-content\">\n          <span className=\"main-content-title mg-b-0 mg-b-lg-1\">THUMBNAILS</span>\n        </div>\n        <div className=\"justify-content-center mt-2\">\n          <Breadcrumb className=\"breadcrumb\">\n            <Breadcrumb.Item className=\"breadcrumb-item tx-15\" href=\"#\">\n              Elements\n            </Breadcrumb.Item>\n            <Breadcrumb.Item className=\"breadcrumb-item\" active aria-current=\"page\">\n              Thumbnails\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </div>\n      </div>\n      {/* <!-- /breadcrumb --> */}\n\n      {/* <!-- row --> */}\n      <Row>\n        <Col lg={12} md={12}>\n          <Card className=\"custom-card\" id=\"thumb\">\n            <Card.Body className=\"ht-100p\">\n              <div>\n                <div className='d-flex'>\n                <h6 className=\"card-title mb-1\">Image Thumbnail Placement</h6>\n                <Form className=\"d-flex ms-auto\">\n                  <Form.Check\n                    label=\"Show Code\"\n                     type=\"switch\"\n                    id=\"custom-switch\"\n                    onClick={() => setThumbnailplacement(!Thumbnailplacement)}\n                    className=\"showcode d-flex ms-auto \"\n                  />\n                </Form>\n                </div>\n                <p className=\"text-muted card-sub-title\">\n                  Images in Bootstrap are made responsive with .img-fluid.\n                  max-width: 100%; and height: auto; are applied to the image so\n                  that it scales with the parent element.\n                </p>\n              </div>\n              <div className=\"text-wrap\">\n                <div className=\"example\">\n                  <Row>\n                    <Col className=\"col-6\"md={3}>\n                      <img\n                        alt=\"Responsive\"\n                        className=\"img-thumbnail\"\n                        src={require(\"../../../assets/img/photos/9.jpg\")}\n                      />\n                    </Col>\n                    <Col className=\"col-6\"md={3}>\n                      <img\n                        alt=\"Responsive\"\n                        className=\"img-thumbnail\"\n                        src={require(\"../../../assets/img/photos/13.jpg\")}\n                      />\n                    </Col>\n                    <Col className=\"col-6 mg-t-10 mg-md-t-0\"md={3}>\n                      <img\n                        alt=\"Responsive\"\n                        className=\"img-thumbnail\"\n                        src={require(\"../../../assets/img/photos/14.jpg\")}\n                      />\n                    </Col>\n                    <Col className=\"col-6 mg-t-10 mg-md-t-0\"md={3}>\n                      <img\n                        alt=\"Responsive\"\n                        className=\"img-thumbnail\"\n                        src={require(\"../../../assets/img/photos/15.jpg\")}\n                      />\n                    </Col>\n                  </Row>\n                </div>\n              </div>\n              <Collapse in={Thumbnailplacement} className=\"mt-2\">\n                <pre>\n                  <code>\n                    {`\n<div className=\"text-wrap\">\n  <div className=\"example\">\n  <Row>\n    <Col className=\"col-6\"md={3}>\n      <img\n        alt=\"Responsive\"\n        className=\"img-thumbnail\"\n        src={require(\"../../../assets/img/photos/9.jpg\")}\n      />\n    </Col>\n    <Col className=\"col-6\"md={3}>\n      <img\n        alt=\"Responsive\"\n        className=\"img-thumbnail\"\n        src={require(\"../../../assets/img/photos/13.jpg\")}\n      />\n    </Col>\n    <Col className=\"col-6 mg-t-10 mg-md-t-0\"md={3}>\n      <img\n        alt=\"Responsive\"\n        className=\"img-thumbnail\"\n        src={require(\"../../../assets/img/photos/14.jpg\")}\n      />\n    </Col>\n    <Col className=\"col-6 mg-t-10 mg-md-t-0\"md={3}>\n      <img\n        alt=\"Responsive\"\n        className=\"img-thumbnail\"\n        src={require(\"../../../assets/img/photos/15.jpg\")}\n      />\n    </Col>\n  </Row>\n  </div>\n</div>\n                        `}\n                  </code>\n                </pre>\n              </Collapse>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col lg={12} md={12}>\n          <Card className=\"custom-card\" id=\"aligning\">\n            <Card.Body className=\" ht-100p\">\n              <div>\n                <div className='d-flex'>\n                <h6 className=\"card-title mb-1\">Aligning Thumbnails</h6>\n                <Form className=\"d-flex ms-auto\">\n                  <Form.Check\n                    label=\"Show Code\"\n                     type=\"switch\"\n                    id=\"custom-switch\"\n                    onClick={() => setAligning(!Aligning)}\n                    className=\"showcode d-flex ms-auto \"\n                  />\n                </Form>\n                </div>\n                <p className=\"text-muted card-sub-title\">\n                  Align images with the helper float classNamees or text alignment\n                  classNamees.\n                </p>\n              </div>\n              <div className=\"text-wrap\">\n                <div className=\"example\">\n                  \n                  <div className=\"clearfix\">\n                    <img\n                      src={require(\"../../../assets/img/photos/10.jpg\")}\n                      className=\"float-sm-left wd-100p wd-sm-200 br-5\"\n                      alt=\"img\"\n                    />\n                    <img\n                      src={require(\"../../../assets/img/photos/11.jpg\")}\n                      className=\"float-sm-right wd-100p wd-sm-200 mg-t-10 mg-sm-t-0 br-5\"\n                      alt=\"img\"\n                    />\n                  </div>\n                  <Collapse in={Aligning} className=\"mt-2\">\n                    <pre>\n                      <code>\n                        {`\n<div className=\"text-wrap\">\n  <div className=\"example\">\n    <div className=\"clearfix\">\n       <img\n         src={require(\"../../../assets/img/photos/10.jpg\")}\n         className=\"float-sm-left wd-100p wd-sm-200 br-5\"\n         alt=\"img\"\n       />\n       <img\n         src={require(\"../../../assets/img/photos/11.jpg\")}\n         className=\"float-sm-right wd-100p wd-sm-200 mg-t-10 mg-sm-t-0 br-5\"\n         alt=\"img\"\n       />\n    </div>\n  </div>\n</div>\n                        `}\n                      </code>\n                    </pre>\n                  </Collapse>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      {/* <!-- Container closed --> */}\n    </div>\n);}\n\nThumbnails.propTypes = {};\n\nThumbnails.defaultProps = {};\n\nexport default Thumbnails;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"names":["Thumbnails","React","Thumbnailplacement","setThumbnailplacement","Aligning","setAligning","className","href","active","lg","md","id","label","type","onClick","alt","src","require","in","defaultProps","funcs","filter","f","reduce","acc","Error","args","apply","this","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","value","toUpperCase","slice","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","Collapse","ref","onEnter","onEntering","onEntered","onExit","onExiting","children","props","computedDimension","handleEnter","useMemo","createChainedFunction","style","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","_jsx","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","state","innerProps","classNames"],"sourceRoot":""}