{"version":3,"file":"static/js/3288.bd580b45.chunk.js","mappings":"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","sources":["components/AdvancedUI/Counters/data.tsx","components/AdvancedUI/Counters/Counters.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport TimeFormat from \"hh-mm-ss\";\r\nimport Countdown from \"react-countdown-now\";\r\n\r\n// //timer 1 minute counter\r\nexport function Middle() {\r\n  const intervalRef = useRef<any>(null);\r\n\r\n  const [timer, setTimer] = useState(\"00:00:00\");\r\n  useEffect(() => {\r\n    function getTimeRemaining(endtime:any) {\r\n      const total = Date.parse(endtime) - Date.parse(Date())\r\n      const seconds = Math.floor((total / 1000) % 60);\r\n      const minutes = Math.floor((total / 1000 / 60) % 60);\r\n      const hours = Math.floor(((total / 1000) * 60 * 60) % 60);\r\n\r\n      return {\r\n        total,\r\n        hours,\r\n        minutes,\r\n        seconds,\r\n      };\r\n    }\r\n    function startTimer(deadline:any) {\r\n      let { total, hours, minutes, seconds } = getTimeRemaining(deadline);\r\n      if (total >= 0) {\r\n        setTimer(\r\n          (hours ? hours : \"0\" + hours) +\r\n            \":\" +\r\n            (minutes ? minutes : \"0\" + minutes) +\r\n            \":\" +\r\n            (seconds ? seconds : \"0\" + seconds)\r\n        );\r\n      } else {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    }\r\n\r\n    function clearTimer(endtime:any) {\r\n      setTimer(\"00:00:60\");\r\n      if (intervalRef.current) clearInterval(intervalRef.current);\r\n      const id = setInterval(() => {\r\n        startTimer(endtime);\r\n      }, 1000);\r\n      intervalRef.current = id;\r\n    }\r\n    function getDeadlineTime() {\r\n      let deadline = new Date();\r\n      deadline.setSeconds(deadline.getSeconds() + 60);\r\n      return deadline;\r\n    }\r\n\r\n    clearTimer(getDeadlineTime());\r\n    return () => {\r\n      if (intervalRef.current) clearInterval(intervalRef.current);\r\n    };\r\n  }, []);\r\n  return <>{timer}</>;\r\n}\r\n\r\n// // Time Counting From 0 to 3 min\r\n// // const RESET_INTERVAL_S = 3; // 300s = 5m * 60s/m\r\nconst formatTime = (time:any) =>\r\n  ` ${String(Math.floor(time / 60)).padStart(2, \"0\")} : ${String(\r\n    time % 60\r\n  ).padStart(2, \"0\")}`;\r\n\r\nconst Timer = ({ time }:any) => {\r\n  // const  RESET_INTERVAL_S = (time % RESET_INTERVAL_S);\r\n\r\n  return (\r\n    <>\r\n      <div> 00 Days 00 :{formatTime(time)}</div>\r\n    </>\r\n  );\r\n};\r\n//timeup\r\nconst IntervalTimerFunctional = () => {\r\n  const [time, setTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(() => {\r\n      setTime((t) => t + 1);\r\n    }, 1000);\r\n    return () => clearInterval(timerId);\r\n  }, []);\r\n\r\n  return <Timer time={time} />;\r\n};\r\n\r\nexport function Uptimer() {\r\n  return <IntervalTimerFunctional />;\r\n}\r\n// //timer up end\r\n\r\n// //Time Counting From 60 to 20\r\nexport const Timers = ({ min }:any) => {\r\n  let mainTime:any;\r\n  const secondsLeft = () => {\r\n    const left = Number(min) * 60;\r\n    return left;\r\n  };\r\n\r\n  const [seconds, setSeconds] = useState(secondsLeft());\r\n  useEffect(() => {\r\n    startTime();\r\n    return () => {\r\n      stopTimer();\r\n    };\r\n  });\r\n\r\n  const startTime = () => {\r\n    if (seconds && seconds > 20) {\r\n      mainTime = setInterval(tick, 1000);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(mainTime);\r\n  };\r\n\r\n  const tick = () => {\r\n    setSeconds((seconds:any) => {\r\n      const updatedSeconds = seconds - 1;\r\n      if (updatedSeconds < 1) {\r\n        stopTimer();\r\n      }\r\n      return updatedSeconds;\r\n    });\r\n  };\r\n\r\n  const display = TimeFormat.fromS(seconds, \"hh:mm:ss\");\r\n  const [h, m, s] = display.split(\":\");\r\n  return (\r\n    <>\r\n      {h} : {m} : {s}\r\n    </>\r\n  );\r\n};\r\n// //Time Counting From 60 to 20 end\r\n\r\n// //Daycounter start\r\nconst AfterComplete = () => <span>You are good to go!</span>\r\n\r\nconst rendering = ({ days, hours, minutes, seconds, completed }:any) => {\r\n  if (completed) {\r\n   \r\n    return <AfterComplete />;\r\n  } else {\r\n   \r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8 mx-auto\">\r\n          <div className=\"count-down row daycounter\">\r\n            <div className=\"col-xl-3 col-md-6 countdown  mb-6 mb-xl-0\">\r\n              <span className=\"days text-primary me-1\">{days}</span>\r\n              <span className=\"text-dark\">Days</span>\r\n            </div>\r\n            <div className=\"col-xl-3 col-md-6 countdown mb-6 mb-xl-0\">\r\n              <span className=\"hours text-primary me-3 \">{hours}</span>\r\n\r\n              <span className=\"text-dark me-2\">Hrs</span>\r\n            </div>\r\n            <div className=\"col-xl-3 col-md-6 countdown  mb-6 mb-xl-0\">\r\n              <span className=\"minutes text-primary me-1\">{minutes}</span>\r\n\r\n              <span className=\"text-dark\">Mins</span>\r\n            </div>\r\n            <div className=\"col-xl-3 col-md-6 countdown \">\r\n              <span className=\"seconds text-primary me-1\">{seconds}</span>\r\n\r\n              <span className=\"text-dark\">Secs</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport function DayCounter() {\r\n  return <Countdown date={Date.now() + 3088800000} renderer={rendering} />\r\n}\r\n// //Daycounter end\r\n\r\n// //TimeCountingdaysLimit start\r\n\r\nconst AfterCompletion = () => <span>You are good to go!</span>;\r\n\r\nconst renderer = ({ days, hours, minutes, seconds, completed }:any) => {\r\n  if (completed) {\r\n   \r\n    return <AfterCompletion />;\r\n  } else {\r\n   \r\n    return (\r\n      <span className=\"h3 text-white\">\r\n        <span>\r\n          {days}Days {hours} Hours {minutes} Minutes {seconds} Seconds\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n};\r\nexport function TimeCountingdaysLimit() {\r\n  return <Countdown date={Date.now() + 259200000} renderer={renderer} />;\r\n}\r\n //TimeCountingdaysLimit end\r\n\r\n\r\n","import React from 'react';\nimport { Breadcrumb, Row, Col, Card } from \"react-bootstrap\";\nimport { Middle, TimeCountingdaysLimit, Timers, Uptimer } from './data';\n\n\nconst Counters = () => (\n  <div>\n    {/* <!-- breadcrumb --> */}\n    <div className=\"breadcrumb-header justify-content-between\">\n      <div className=\"left-content\">\n        <span className=\"main-content-title mg-b-0 mg-b-lg-1\">COUNTERS</span>\n      </div>\n      <div className=\"justify-content-center mt-2\">\n        <Breadcrumb className=\"breadcrumb\">\n          <Breadcrumb.Item className=\"breadcrumb-item tx-15\" href=\"#\">\n            Advanced UI\n          </Breadcrumb.Item>\n          <Breadcrumb.Item\n            className=\"breadcrumb-item \"\n            active\n            aria-current=\"page\"\n          >\n            Counters\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </div>\n    </div>\n    {/* <!-- /breadcrumb --> */}\n\n    {/* <!-- row --> */}\n    <Row>\n      <Col md={12} xxl={4}>\n        <Card>\n          <Card.Header>\n            <h3 className=\"card-title\">Time Counting From 0</h3>\n          </Card.Header>\n          <Card.Body>\n            <div className=\"example bg-primary-transparent border-primary text-primary\">\n              <div className=\"d-block d-sm-flex\">\n                <span className=\"tx-30 pe-3\">\n                  <i className=\"bi bi-alarm\"></i>\n                </span>\n                <div className=\"\">\n                  <span id=\"timer-countup\" className=\"h3\">\n                    <Uptimer />\n                  </span>\n                  <h5 className=\"mb-0 mt-1\">Only 6 min left</h5>\n                </div>\n                <div className=\"ms-auto text-md-end text-start\">\n                  <h5 className=\"mb-1\">Max Bid:</h5>\n                  <span className=\"h3 mb-0\">$1000</span>\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n      <Col md={12} xxl={4}>\n        <Card>\n          <Card.Header>\n            <h3 className=\"card-title\">Time Counting From 60 to 20</h3>\n          </Card.Header>\n          <Card.Body>\n            <div className=\"example bg-secondary-transparent border-secondary text-secondary\">\n              <div className=\"d-block d-sm-flex\">\n                <span className=\"tx-30 pe-3\">\n                  <i className=\"bi bi-alarm\"></i>\n                </span>\n                <div className=\"\">\n                  <span id=\"timer-countinbetween\" className=\"h3\">\n                    <Timers min={1} />\n                  </span>\n                  <h5 className=\"mb-0 mt-1\">Only 6 min left</h5>\n                </div>\n                <span className=\"h1 ms-auto mb-0\">$1000</span>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n      {/* <!-- COL-END --> */}\n      <Col md={12} xxl={4}>\n        <Card>\n          <Card.Header>\n            <h3 className=\"card-title\">Time minutes counter</h3>\n          </Card.Header>\n          <Card.Body>\n            <div className=\"example bg-warning-transparent border-warning text-warning\">\n              <div className=\"d-block d-sm-flex\">\n                <span className=\"tx-30 pe-3\">\n                  <i className=\"bi bi-alarm\"></i>\n                </span>\n                <div className=\"\">\n                  <span id=\"timer-countercallback\" className=\"h3\">\n                    <Middle />\n                  </span>\n                  <h5 className=\"mb-0 mt-1\">Only 6 min left</h5>\n                </div>\n                <span className=\"h1 text-center ms-auto mb-0\">$1000</span>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- COL-END --> */}\n    <Row>\n      <Col md={12}>\n        <Card>\n          <Card.Header>\n            <h3 className=\"card-title\">Time Counting days Limit</h3>\n          </Card.Header>\n          <Card.Body className=\" mx-auto\">\n            <div className=\"example bg-info text-white border border-info pb-4 px-5 position-relative\">\n              <div className=\"counter-side-badge\">\n                <span className=\"badge bg-danger\">Hurry Up</span>\n              </div>\n              <span>Only we have two days</span>\n              <div>\n                <span className=\"text-white tx-30 pe-5\">\n                  <i className=\"bi bi-calendar-day\"></i>\n                </span>\n                <span id=\"timer-outputpattern\" className=\"h3\">\n                  <TimeCountingdaysLimit />\n                </span>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- row-end--> */}\n\n    {/* <!-- row --> */}\n    <Row>\n      <Col xl={4} md={12} sm={12}>\n        <Card className=\"custom-card\">\n          <Card.Body className=\" text-center card-img-top-1\">\n            <div>\n              <h6 className=\"card-title\">Time Counting From 0</h6>\n            </div>\n            <img\n              src={require(\"../../../assets/img/media/illustrate.png\")}\n              alt=\"counter\"\n              className=\"wd-300 ht-300 \"\n            />\n            <div className=\"pb-0 mt-4  bg-primary text-white p-3 br-5\">\n              <span id=\"timer-countup1\" className=\"tx-26 mb-0\">\n                {\" \"}\n                <Uptimer />\n              </span>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col xl={4} md={12} sm={12}>\n        <Card className=\"custom-card\">\n          <Card.Body className=\" text-center card-img-top-1\">\n            <div>\n              <h6 className=\"card-title\">Time Counting From 60 to 20</h6>\n            </div>\n            <img\n              src={require(\"../../../assets/img/media/illustrate1.png\")}\n              alt=\"counter\"\n              className=\"wd-300 ht-300 \"\n            />\n            <div className=\"mt-4 bg-warning text-white p-3 br-5\">\n              <span id=\"timer-countinbetween1\" className=\"tx-26 mb-0\">\n                {\" \"}\n                <Timers min={1} />\n              </span>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n      <Col xl={4} md={12} sm={12}>\n        <Card className=\"custom-card\">\n          <Card.Body className=\" text-center card-img-top-1 \">\n            <div>\n              <h6 className=\"card-title\">Time 1 minute counter</h6>\n            </div>\n            <img\n              src={require(\"../../../assets/img/media/illustrate2.png\")}\n              alt=\"counter\"\n              className=\"wd-300 ht-300 \"\n            />\n            <div className=\"mt-4 bg-secondary text-white p-3 br-5\">\n              <span id=\"timer-countercallback1\" className=\"tx-26 mb-0\">\n                <Middle />\n              </span>\n            </div>\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n    {/* <!-- /row --> */}\n  </div>\n);\n\nCounters.propTypes = {};\n\nCounters.defaultProps = {};\n\nexport default Counters;\n"],"names":["Middle","intervalRef","useRef","useState","timer","setTimer","useEffect","startTimer","deadline","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","getTimeRemaining","clearInterval","current","id","setInterval","clearTimer","setSeconds","getSeconds","getDeadlineTime","formatTime","time","String","padStart","Timer","IntervalTimerFunctional","setTime","timerId","t","Uptimer","Timers","mainTime","min","Number","startTime","stopTimer","tick","updatedSeconds","TimeFormat","split","h","m","s","AfterCompletion","renderer","days","completed","className","TimeCountingdaysLimit","date","now","Counters","Breadcrumb","href","active","Row","Col","md","xxl","Card","xl","sm","src","require","alt","defaultProps"],"sourceRoot":""}